{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material/form-field\";\nimport * as i3 from \"@angular/material/input\";\nexport let FormInputComponent = /*#__PURE__*/(() => {\n  class FormInputComponent {}\n\n  FormInputComponent.ɵfac = function FormInputComponent_Factory(t) {\n    return new (t || FormInputComponent)();\n  };\n\n  FormInputComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FormInputComponent,\n    selectors: [[\"newt-form-input\"]],\n    hostVars: 2,\n    hostBindings: function FormInputComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.class);\n      }\n    },\n    decls: 4,\n    vars: 4,\n    consts: [[3, \"formGroup\"], [1, \"mat-form-field-fluid\"], [\"matInput\", \"\", 3, \"placeholder\", \"formControlName\", \"readonly\", \"input\", \"change\", \"focusout\"], [\"input\", \"\"]],\n    template: function FormInputComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"mat-form-field\", 1);\n        i0.ɵɵelementStart(2, \"input\", 2, 3);\n        i0.ɵɵlistener(\"input\", function FormInputComponent_Template_input_input_2_listener() {\n          i0.ɵɵrestoreView(_r1);\n\n          const _r0 = i0.ɵɵreference(3);\n\n          return ctx.config.event === \"input\" && ctx.config.function(_r0.value);\n        })(\"change\", function FormInputComponent_Template_input_change_2_listener() {\n          i0.ɵɵrestoreView(_r1);\n\n          const _r0 = i0.ɵɵreference(3);\n\n          return ctx.config.event === \"change\" && ctx.config.function(_r0.value);\n        })(\"focusout\", function FormInputComponent_Template_input_focusout_2_listener() {\n          i0.ɵɵrestoreView(_r1);\n\n          const _r0 = i0.ɵɵreference(3);\n\n          return ctx.config.event === \"focusout\" && ctx.config.function(_r0.value);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.group);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"placeholder\", ctx.config.placeholder)(\"formControlName\", ctx.config.name)(\"readonly\", ctx.config.readonly);\n      }\n    },\n    directives: [i1.NgControlStatusGroup, i1.FormGroupDirective, i2.MatFormField, i3.MatInput, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName],\n    styles: [\"\"]\n  });\n  return FormInputComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}