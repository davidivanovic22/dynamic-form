{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/form-field\";\nimport * as i4 from \"@angular/material/select\";\nimport * as i5 from \"@angular/material/core\";\nimport * as i6 from \"../pipes/option-preview.pipe\";\n\nfunction FormSelectComponent_mat_form_field_1_mat_option_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 5);\n    i0.ɵɵpipe(1, \"optionPreview\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"optionPreview\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r2 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"value\", i0.ɵɵpipeBind2(1, 2, option_r2, ctx_r1.config == null ? null : ctx_r1.config.rowValue));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(3, 5, option_r2, ctx_r1.config == null ? null : ctx_r1.config.row), \"\");\n  }\n}\n\nfunction FormSelectComponent_mat_form_field_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-form-field\", 2);\n    i0.ɵɵelementStart(1, \"mat-select\", 3);\n    i0.ɵɵlistener(\"valueChange\", function FormSelectComponent_mat_form_field_1_Template_mat_select_valueChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.config.selected = $event;\n    })(\"selectionChange\", function FormSelectComponent_mat_form_field_1_Template_mat_select_selectionChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.config.event === \"selection\" && ctx_r5.config.function($event);\n    });\n    i0.ɵɵtemplate(2, FormSelectComponent_mat_form_field_1_mat_option_2_Template, 4, 8, \"mat-option\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"placeholder\", ctx_r0.config.placeholder)(\"formControlName\", ctx_r0.config.name)(\"multiple\", ctx_r0.config.multiple)(\"value\", ctx_r0.config.selected);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.config.options);\n  }\n}\n\nexport let FormSelectComponent = /*#__PURE__*/(() => {\n  class FormSelectComponent {}\n\n  FormSelectComponent.ɵfac = function FormSelectComponent_Factory(t) {\n    return new (t || FormSelectComponent)();\n  };\n\n  FormSelectComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FormSelectComponent,\n    selectors: [[\"newt-form-select\"]],\n    hostVars: 2,\n    hostBindings: function FormSelectComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.class);\n      }\n    },\n    decls: 2,\n    vars: 2,\n    consts: [[3, \"formGroup\"], [\"class\", \"mat-form-field-fluid\", 4, \"ngIf\"], [1, \"mat-form-field-fluid\"], [3, \"placeholder\", \"formControlName\", \"multiple\", \"value\", \"valueChange\", \"selectionChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n    template: function FormSelectComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, FormSelectComponent_mat_form_field_1_Template, 3, 5, \"mat-form-field\", 1);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.group);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.config.condition);\n      }\n    },\n    directives: [i1.NgControlStatusGroup, i1.FormGroupDirective, i2.NgIf, i3.MatFormField, i4.MatSelect, i1.NgControlStatus, i1.FormControlName, i2.NgForOf, i5.MatOption],\n    pipes: [i6.OptionPreviewPipe],\n    styles: [\"\"]\n  });\n  return FormSelectComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}